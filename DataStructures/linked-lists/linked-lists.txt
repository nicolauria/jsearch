people say that linked-list has much better performance when it comes to
random insertion and random deletion

this was once true in theory but the architecture of modern computers has changed
cpu speeds are now significantly higher than ram access
to account for this modern computers use a cache
(the cache is much smaller than ram)

because linked-lists do not store nodes in sequential memory, traversing a linked
list can actually be longer than an array dues to cache miss.

when we insert or delete in an array, all items have to be moved
(reallocated in memory)
with a linked list, we are simply changing our pointers

also arrays are of a fixed length and have to be resized
linked-lists are dynamic as all we are doing is adding a new node and changing pointer

ASID
access, search, insertion, deletion
Access: array -> O(1), linked-list -> O(n)
Search: array -> O(n), linked-list -> O(n)
Insertion: array -> O(n), linked-list -> O(1)
Deletion: array -> O(n), linked-list -> O(1)
