All modern browsers have a built-in XMLHttpRequest object to request data from a server.
it is part of the javascript environment

The XMLHttpRequest object is a developers dream, because you can:

Update a web page without reloading the page
Request data from a server - after the page has loaded
Receive data from a server  - after the page has loaded
Send data to a server - in the background

var req = new XMLHttpRequest
req.open("GET", "https://example.com")
req.send()
req.send("name=value&anothername="+encodeURIComponent(myVar)+"&so=on")
-> example params if post request
req.onreadystatechange = nameOfFunc;
-> event to be called on response
req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

if (req.readyState === XMLHttpRequest.DONE) {
    // Everything is good, the response was received.
} else {
    // Not ready yet.
}

if (req.status === 200) {
    // Perfect!
} else {
    // There was a problem with the request.
    // For example, the response may have a 404 (Not Found)
    // or 500 (Internal Server Error) response code.
}

req.responseText – returns the server response as a string of text
req.responseXML – returns the response as an XMLDocument object you can traverse with JavaScript DOM functions
